raw = FALSE)
}
if(exists("subDat_ch1")){
plotRingData(data = subDat_ch1,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch2")){
plotRingData(data = subDat_ch2,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
}
if(netShifts){
if(exists("subDat_ch1")){
netDat_ch1 <- getNetShifts(data = subDat_ch1,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch1, step = 1, loc = loc)
}
if(exists("subDat_ch2")){
netDat_ch2 <- getNetShifts(data = subDat_ch2,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch2, step = 1, loc = loc)
}
}
if (chkRings){
checkRingQuality(data = aggData,
chkTime1 = 20,
chkTime2 = 30,
loc = loc)}
if (celebrate){shell.exec("https://youtu.be/dQw4w9WgXcQ")}
}
analyzeBiosensorData(loc = "plot2", startRun = 5, chopRun = T)
if(chopRun){aggDat <- chopUpRun(data = aggDat,
startRun = startRun,
loc = loc)}
plot(aggDat$Shift~aggDat$Time, col = aggDat$Ring)
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
plot(aggDat$Shift~aggDat$Time, col = aggDat$Ring)
startRun <- 15
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
if(chopRun){aggDat <- chopUpRun(data = aggDat,
startRun = startRun,
loc = loc)}
plot(aggDat$Shift~aggDat$Time, col = aggDat$Ring)
channels <- unique(aggDat$Channel)
if(1 %in% channels){
subDat_ch1 <- subtractControl(data = aggDat,
ch = 1,
cntl = "thermal",
loc = loc)
}
if(2 %in% channels){
subDat_ch2 <- subtractControl(data = aggDat,
ch = 2,
cntl = "thermal",
loc = loc)
}
analyzeBiosensorData <- function(time1 = 51, time2 = 39,
filename = "groupNames_XPP.csv",
loc = "plots",
chopRun = FALSE,
startRun = 10,
fsr = FALSE,
chkRings = FALSE,
plotData = TRUE,
celebrate = FALSE,
netShifts = TRUE,
getLayoutFile = TRUE) {
getName()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
if(chopRun){aggDat <- chopUpRun(data = aggDat,
startRun = startRun,
loc = loc)}
channels <- unique(aggDat$Channel)
if(1 %in% channels){
subDat_ch1 <- subtractControl(data = aggDat,
ch = 1,
cntl = "thermal",
loc = loc)
}
if(2 %in% channels){
subDat_ch2 <- subtractControl(data = aggDat,
ch = 2,
cntl = "thermal",
loc = loc)
}
subDat_chU <- subtractControl(data = aggDat,
ch = "U",
cntl = "thermal",
loc = loc)
if(plotData){
if(exists("subDat_chU")){
plotRingData(data = subDat_chU,
splitPlot = FALSE,
loc = loc,
raw = TRUE)
plotRingData(data = subDat_chU,
splitPlot = TRUE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch1")){
plotRingData(data = subDat_ch1,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch2")){
plotRingData(data = subDat_ch2,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
}
if(netShifts){
if(exists("subDat_ch1")){
netDat_ch1 <- getNetShifts(data = subDat_ch1,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch1, step = 1, loc = loc)
}
if(exists("subDat_ch2")){
netDat_ch2 <- getNetShifts(data = subDat_ch2,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch2, step = 1, loc = loc)
}
}
if (chkRings){
checkRingQuality(data = aggData,
chkTime1 = 20,
chkTime2 = 30,
loc = loc)}
if (celebrate){shell.exec("https://youtu.be/dQw4w9WgXcQ")}
}
analyzeBiosensorData(loc = "plot2", startRun = 5, chopRun = T)
library(biosensor)
library(biosensor)
analyzeBiosensorData(loc = "plot2", startRun = 5, chopRun = T)
library(biosensor)
analyzeBiosensorData(loc = "plot2", startRun = 5, chopRun = T)
traceback()
startRun = 10
fsr = FALSE
chkRings = FALSE
plotData = TRUE
celebrate = FALSE
netShifts = TRUE
getLayoutFile = TRUE
startRun = 10
chopRun <- TRUE
loc <- "plots2"
getName()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
library(biosensor)
devtools::load_all("D:/Google Drive/Research/GitRepositories/biosensor")
getName()
aggData()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
filename = "groupNames_XPP.csv"
getName()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
if(chopRun){aggDat <- chopUpRun(data = aggDat,
startRun = startRun,
loc = loc)}
View(aggData)
View(aggDat)
chopUpRun <- function(data, startRun, loc){
endRun <- max(data$Time) - startRun
subDat <- subset(data, Time > startRun & Time < endRun)
subDat <- dplyr::group_by(subDat, Ring)
subDat <- dplyr::mutate(subDat,
Shift = Shift - Shift[1],
Time = Time -Time[1])
readr::write_csv(subDat,
path = paste0(loc, "/", name, "_allRings_chopped.csv"))
return(subDat)
}
devtools::load_all("D:/Google Drive/Research/GitRepositories/biosensor")
analyzeBiosensorData(loc = "plot2", startRun = 5, chopRun = T)
source('D:/Google Drive/Research/GitRepositories/biosensor/R/chopUpRun.R')
analyzeBiosensorData(loc = "plot2", startRun = 5, chopRun = T)
aggDat
a <- dplyr::group_by(aggDat, Ring)
nrow(a)
length(a$Time)
tally(dplyr::group_by(aggDat, Ring))
a <- tally(dplyr::group_by(aggDat, Ring))
View(a)
subCast <- reshape2::dcast(subDat, formula = Time + Group + Target + Channel + Experiment + TimePoint ~ Ring, value.var = Shift)
subCast <- reshape2::dcast(subDat, formula = Time + Group + Target + Channel + Experiment + TimePoint ~ Ring, value.var = "Shift")
data <- aggDat
subDat <- subset(data, Time > startRun)
subDat <- dplyr::group_by(subDat, Ring)
subDat <- dplyr::mutate(subDat,
Shift = Shift - Shift[1],
Time = Time -Time[1])
subCast <- reshape2::dcast(subDat, formula = Time + Group + Target + Channel + Experiment + TimePoint ~ Ring, value.var = "Shift")
View(subCast)
subCast <- reshape2::dcast(subDat, formula = Time + Group + Target + Channel + Experiment  ~ Ring, value.var = "Shift")
head(subCast)
subCast <- reshape2::dcast(subDat, formula = Group + Target + Channel + Experiment  ~ Ring + Time, value.var = "Shift")
head(subCast)
tally(subDat, Time)
tally(dplyr::group_by(subDat, Time))
tally(dplyr::group_by(subDat, Ring))
a <- tally(dplyr::group_by(subDat, Ring))
View(a)
subDat <- subset(data, Time > startRun & Time < 25)
subDat <- dplyr::group_by(subDat, Ring)
subDat <- dplyr::mutate(subDat,
Shift = Shift - Shift[1],
Time = Time -Time[1])
a <- tally(dplyr::group_by(subDat, Ring))
View(a)
chopUpRun <- function(data, startRun, loc){
subDat <- subset(data, Time > startRun & Time < 25)
subDat <- dplyr::group_by(subDat, Ring)
subDat <- dplyr::mutate(subDat,
Shift = Shift - Shift[1],
Time = Time -Time[1])
readr::write_csv(subDat,
path = paste0(loc, "/", name, "_allRings_chopped.csv"))
return(subDat)
}
analyzeBiosensorData <- function(time1 = 51, time2 = 39,
filename = "groupNames_XPP.csv",
loc = "plots",
chopRun = FALSE,
startRun = 10,
fsr = FALSE,
chkRings = FALSE,
plotData = TRUE,
celebrate = FALSE,
netShifts = TRUE,
getLayoutFile = TRUE) {
getName()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
if(chopRun){aggDat <- chopUpRun(data = aggDat,
startRun = startRun,
loc = loc)}
channels <- unique(aggDat$Channel)
if(1 %in% channels){
subDat_ch1 <- subtractControl(data = aggDat,
ch = 1,
cntl = "thermal",
loc = loc)
}
if(2 %in% channels){
subDat_ch2 <- subtractControl(data = aggDat,
ch = 2,
cntl = "thermal",
loc = loc)
}
subDat_chU <- subtractControl(data = aggDat,
ch = "U",
cntl = "thermal",
loc = loc)
if(plotData){
if(exists("subDat_chU")){
plotRingData(data = subDat_chU,
splitPlot = FALSE,
loc = loc,
raw = TRUE)
plotRingData(data = subDat_chU,
splitPlot = TRUE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch1")){
plotRingData(data = subDat_ch1,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch2")){
plotRingData(data = subDat_ch2,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
}
if(netShifts){
if(exists("subDat_ch1")){
netDat_ch1 <- getNetShifts(data = subDat_ch1,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch1, step = 1, loc = loc)
}
if(exists("subDat_ch2")){
netDat_ch2 <- getNetShifts(data = subDat_ch2,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch2, step = 1, loc = loc)
}
}
if (chkRings){
checkRingQuality(data = aggData,
chkTime1 = 20,
chkTime2 = 30,
loc = loc)}
if (celebrate){shell.exec("https://youtu.be/dQw4w9WgXcQ")}
}
analyzeBiosensorData <- function(time1 = 51, time2 = 39,
filename = "groupNames_XPP.csv",
loc = "plots",
chopRun = FALSE,
startRun = 10,
fsr = FALSE,
chkRings = FALSE,
plotData = TRUE,
celebrate = FALSE,
netShifts = TRUE,
getLayoutFile = TRUE) {
getName()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
if(chopRun){aggDat <- chopUpRun(data = aggDat,
startRun = startRun,
loc = loc)}
channels <- unique(aggDat$Channel)
if(1 %in% channels){
subDat_ch1 <- subtractControl(data = aggDat,
ch = 1,
cntl = "thermal",
loc = loc)
}
if(2 %in% channels){
subDat_ch2 <- subtractControl(data = aggDat,
ch = 2,
cntl = "thermal",
loc = loc)
}
subDat_chU <- subtractControl(data = aggDat,
ch = "U",
cntl = "thermal",
loc = loc)
if(plotData){
if(exists("subDat_chU")){
plotRingData(data = subDat_chU,
splitPlot = FALSE,
loc = loc,
raw = TRUE)
plotRingData(data = subDat_chU,
splitPlot = TRUE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch1")){
plotRingData(data = subDat_ch1,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
if(exists("subDat_ch2")){
plotRingData(data = subDat_ch2,
splitPlot = FALSE,
loc = loc,
raw = FALSE)
}
}
if(netShifts){
if(exists("subDat_ch1")){
netDat_ch1 <- getNetShifts(data = subDat_ch1,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch1, step = 1, loc = loc)
}
if(exists("subDat_ch2")){
netDat_ch2 <- getNetShifts(data = subDat_ch2,
time1 = time1,
time2 = time2,
step = 1,
loc = loc)
plotNetShifts(data = netDat_ch2, step = 1, loc = loc)
}
}
if (chkRings){
checkRingQuality(data = aggData,
chkTime1 = 20,
chkTime2 = 30,
loc = loc)}
if (celebrate){shell.exec("https://youtu.be/dQw4w9WgXcQ")}
}
analyzeBiosensorData(chopRun = TRUE, loc = "plots2", startRun = 10, plotData = FALSE, netShifts = F)
chopUpRun <- function(data, startRun, loc){
subDat <- subset(data, Time > startRun & Time < 25)
subDat <- dplyr::group_by(subDat, Ring)
subDat <- dplyr::mutate(subDat,
Shift = Shift - Shift[1],
Time = Time -Time[1])
readr::write_csv(subDat,
path = paste0(loc, "/", name, "_allRings_chopped.csv"))
return(subDat)
}
a <- chopUpRun()
a <- chopUpRun(data = aggDat)
getName()
aggDat <- aggData(filename = filename, loc = loc, fsr = fsr,
getLayoutFile = getLayoutFile)
a <- chopUpRun(data = aggDat)
a <- chopUpRun(data = aggDat, startRun = 10)
a <- chopUpRun(data = aggDat, startRun = 10, loc = "plots2")
head(a)
tally(dplyr::group_by(a, Ring))
View(tally(dplyr::group_by(a, Ring)))
subtractControl <- function(data, loc, ch, cntl){
# filter data by Channel
if (ch != "U"){data <- dplyr::filter(data, Channel == ch)}
data <- dplyr::filter(data, Target != "Ignore")
# get thermal control averages
controls <- dplyr::filter(data, Target == cntl)
controls <- dplyr::group_by(controls, TimePoint)
controls <- dplyr::summarise_at(controls, "Shift", mean)
controls <- unlist(dplyr::select(controls, Shift) )
data$Cntl <- rep(controls, length(unique(data$Ring)))
# subtracts thermal controls from each ring
cntlDat <- dplyr::mutate(data, Corrected = Shift - Cntl)
# remove control column and control rings
cntlDat <- dplyr::filter(cntlDat, Target != cntl &
Target != "thermal")
cntlDat$Cntl <- cntl
cntlDat$Ch <- ch
# save data to new file
readr::write_csv(cntlDat,
paste(loc,"/", name, "_", cntl, "Control", "_ch",
ch, ".csv", sep = ''))
return(cntlDat)
}
data <- a
subtractControl(data = a,
ch = 1,
cntl = "thermal",
loc = loc)
data
# filter data by Channel
if (ch != "U"){data <- dplyr::filter(data, Channel == ch)}
ch <- 1
# filter data by Channel
if (ch != "U"){data <- dplyr::filter(data, Channel == ch)}
cntl <- "thermal"
data <- dplyr::filter(data, Target != "Ignore")
# get thermal control averages
controls <- dplyr::filter(data, Target == cntl)
controls <- dplyr::group_by(controls, TimePoint)
controls <- dplyr::summarise_at(controls, "Shift", mean)
controls <- unlist(dplyr::select(controls, Shift) )
controls
length(controls)
# subtracts thermal controls from each ring
cntlDat <- dplyr::mutate(data, Corrected = Shift - Cntl)
data$Cntl <- rep(controls, length(unique(data$Ring)))
tally(dplyr::group_by(data, Ring))
length(controls)
View(tally(dplyr::group_by(data, Ring)))
data
startLoc <- which(abs(min(data$Time - startRun)))
startLoc <- which(minabs((data$Time - startRun)))
startLoc <- which(min(abs(data$Time - startRun)))
startLoc <- which(abs(data$Time - startRun) ==
min(abs(dat$Time - startRun)))
startLoc <- which(abs(data$Time - startRun) ==
min(abs(data$Time - startRun)))
startLoc
startTP <- data[startLoc, TimePoint]
startTP <- data$TimePoint[startLoc]
startTP
chopUpRun <- function(data, startRun, loc){
startLoc <- which(abs(data$Time - startRun) ==
min(abs(data$Time - startRun)))
startTP <- data$TimePoint[startLoc]
subDat <- subset(data, TimePoint > startTP)
subDat <- dplyr::group_by(subDat, Ring)
subDat <- dplyr::mutate(subDat,
Shift = Shift - Shift[1],
Time = Time -Time[1])
readr::write_csv(subDat,
path = paste0(loc, "/", name, "_allRings_chopped.csv"))
return(subDat)
}
source('D:/Google Drive/Research/GitRepositories/biosensor/R/analyzeBiosensorData.R')
library(biosensor)
devtools::load_all("D:/Google Drive/Research/GitRepositories/biosensor")
analyzeBiosensorData(chopRun = TRUE, plotData = FALSE, loc = "plot2", startRun = 6)
library(biosensor)
library(biosensor)
