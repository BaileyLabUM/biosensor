# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
ggplot2::theme_set(ggthemes::theme_bw(base_size = 16))
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
plotDataRoutine()
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
getwd()
setwd("../Data")
plotDataRoutine()
ggplot2::theme_set(theme(panel.background = element_rect(fill = NA),
panel.grid = element_blank()))
ggplot2::theme_set(theme(panel.background = element_rect(fill = NA),
panel.grid = element_blank()))
ggplot2::theme_set(ggplot2::theme(panel.background = element_rect(fill = NA),
panel.grid = element_blank()))
# Load libraries and set theme for all plots
library(ggplot2)
ggplot2::theme_set(ggplot2::theme(panel.background = element_rect(fill = NA),
panel.grid = element_blank()))
ggplot2::theme_set(ggplot2::theme(panel.background = element_rect(fill = NA),
panel.grid = element_blank()))
ggplot2::theme_set(ggplot2::theme(panel.background = element_rect(fill = NA)))
ggplot2::theme_set(theme(panel.background = element_rect(fill = NA)))
devtools::load_all("D:/Google Drive/Research/GitRepositories/biosensor")
devtools::install_github("'cttobin/ggthemr'")
devtools::install_github("cttobin/ggthemr")
ggplot2::theme_set(ggthemr::ggthemr("pale"))
ggthemr
library(ggthemr)
ggthemr
ggplot2::theme_set(ggthemr::ggthemr())
ggthemr::ggthemr()
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
ggthemr::ggthemr(palette = "pale", text_size = 16)
plotFullSet(data = compDat)
ggthemr::ggthemr(palette = "pale", text_size = 16, layout = "clean")
plotFullSet(data = compDat)
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
ggplot2::set_theme(ggthemes::theme_few(base_size = 16))
setwd("D:/Box Sync/Data")
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
ggplot2::set_theme(ggthemes::theme_few(base_size = 16))
plotFullSet(data = compDat)
ggplot2::theme_set(ggthemes::theme_few(base_size = 16))
plotFullSet(data = compDat)
ggplot2::theme_set(ggthemes::theme_few(base_size = 16), ggthemes::scale_colour_economist())
ggplot2::theme_set(ggthemes::scale_colour_economist())
ggplot2::theme_gray
ggplot2::theme_few
ggplot2::theme_classic
ggthemr
set_themr
?ggthemr
?set_themr
set_themr
ggthemr(palette = "fresh")
ggthemr::ggthemr(palette = "fresh")
ggplot2::theme_set(ggthemes::theme_few(base_size = 16))
plotFullSet(data = compDat)
setwd("C:/Users/james_000/Downloads/DataDeJohn/20171109_2uMssDNA_05xTBE_gaskEMRA_11092017_1/")
setwd("C:/Users/james_000/Downloads/DataDeJohn/20171109_2uMssDNA_05xTBE_gaskEMRA_11092017_1/")
analyzeBiosensorData(loc = "plots", cntl = "thermal")
analyzeBiosensorData(loc = "plots", cntl = "Off-Target")
analyzeBiosensorData(loc = "plots", cntl = "Blank")
analyzeBiosensorData(loc = "plots", cntl = "thermal", chopRun = 21)
analyzeBiosensorData(loc = "plots", cntl = "Off-Target", chopRun = 21)
analyzeBiosensorData(loc = "plots", cntl = "Blank", chopRun = 21)
setwd("C:/Users/james_000/Downloads/DataDeJohn/20171109_2uMssDNA_05xTBE_gaskEMRA_11092017_1/")
analyzeBiosensorData(loc = "plots", cntl = "thermal", chopRun = 21,
time1 = 30, time2 = 10)
analyzeBiosensorData(loc = "plots", cntl = "Off-Target", chopRun = 21,
time1 = 30, time2 = 10)
analyzeBiosensorData(loc = "plots", cntl = "Blank", chopRun = 21,
time1 = 30, time2 = 10)
analyzeBiosensorData(loc = "plots_thermal", cntl = "thermal", chopRun = 21,
time1 = 30, time2 = 10)
analyzeBiosensorData(loc = "plots_off", cntl = "Off-Target", chopRun = 21,
time1 = 30, time2 = 10)
analyzeBiosensorData(loc = "plots_blank", cntl = "Blank", chopRun = 21,
time1 = 30, time2 = 10)
chipLayout <- grep("groupNames", list.files())
chipLayout <- grep("groupNames", list.files(), value = TRUE)
chipLayout
chipLayout <- read.csv(grep("groupNames", list.files(), value = TRUE))
chipLayout <- read.csv(grep("groupNames", list.files(), value = TRUE))
tarList <- unique(chipLayout$Target)
for(i in tarList){
analyzeBiosensorData(loc = paste("plots", i, sep = "_"),
cntl = tarList,
chopRun = 21,
time1 = 30,
time2 = 10)
}
tarList
for(i in tarList)print(i)
chipLayout <- read.csv(grep("groupNames", list.files(), value = TRUE))
tarList <- unique(chipLayout$Target)
for(i in tarList)print(i)
for(i in tarList){
analyzeBiosensorData(loc = paste("plots", i, sep = "_"),
cntl = tarList,
chopRun = 21,
time1 = 30,
time2 = 10)
}
for(i in tarList)print(paste("plots", i, sep = "_"))
chipLayout <- read.csv(grep("groupNames", list.files(), value = TRUE))
tarList <- unique(chipLayout$Target)
for(i in tarList){
analyzeBiosensorData(loc = paste("plots", i, sep = "_"),
cntl = i,
chopRun = 21,
time1 = 30,
time2 = 10)
}
for(i in tarList){
analyzeBiosensorData(loc = paste("plots", i, sep = "_"),
cntl = i,
chopRun = 21,
time1 = 32,
time2 = 19)
}
darken_swatch(amount = 0.3)
ggthemr::ggthemr(palette = "fresh")
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
ggthemr::ggthemr(palette = "fresh")
ggplot2::theme_set(ggthemes::theme_few(base_size = 16))
setwd("D:/Box Sync/Data")
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
plotDataRoutine()
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
# ggthemr::ggthemr(palette = "fresh")
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))
setwd("D:/Box Sync/Data")
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
plotDataRoutine()
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
# ggthemr::ggthemr(palette = "fresh")
plotTheme <- theme_bw(base_size = 16) +
theme(panel.grid = element_blank())
ggplot2::theme_set(plotTheme)
setwd("D:/Box Sync/Data")
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
setwd(directory)
}
plotDataRoutine()
## Run all of the above functions to generate plots
plotDataRoutine <- function(){
# Load libraries and set theme for all plots
library(tidyverse)
library(biosensor)
# ggthemr::ggthemr(palette = "fresh")
plotTheme <- theme_bw(base_size = 16) +
theme(panel.grid = element_blank())
ggplot2::theme_set(plotTheme)
setwd("D:/Box Sync/Data")
# Load in data to make plots
x <- compLabelNorm()
compDat <- x[[1]]
# Save current wd to return to later and setwd to plots folder
directory <- getwd()
setwd("../XPP_Plots/")
plotFullSet(data = compDat)
plotEachTxt(data = compDat)
plotEachTar(data = compDat)
control <- "DMSO"
txtList <- unique(compDat$Treatment)
compTargets <- c("pAktSer473", "pS6Ser235/6", "pS6Ser240/4",
"pp70S6KThr389", "pRbSer780", "pRbSer807/11")
lapply(txtList, function(i){
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM6")
plotTxt(data = compDat, control = control, treatment = i,
targets = compTargets, cellLine = "GBM26")
})
# Pairwise treatment list
txtPairs <- combn(unique(compDat$Treatment), 2, simplify = FALSE)
# Run through pair-wise list to plot treatment comparisons
lapply(txtPairs, function(i){
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM6")
txtComp(data = compDat, treatments = as.vector(i),
targets = compTargets, cellLine = "GBM26")
})
cytometry(data = compDat)
setwd(directory)
}
cytometry(data = compDat)
x
# Load in data to make plots
x <- compLabelNorm()
cytometry(data = compDat)
compDat <- x[[1]]
cytometry(data = compDat)
cytometry <- function(data){
dir.create("Cytometry", showWarnings = FALSE)
rxDat <- filter(data, !grepl("Serum", Treatment))
pairList <- t(combn(unique(data$Target), 2))
for(i in seq_len(nrow(pairList))){
cytDat <- dplyr::filter(rxDat, Target %in% pairList[i, ])
cytCast <- reshape2::dcast(data = cytDat, Treatment + CellLine +
TimePoint + Replicate + n ~ Target,
value.var = "NormLog")
plot <- ggplot2::ggplot(cytCast, ggplot2::aes(x = cytCast[, 6],
y = cytCast[, 7],
color = interaction(CellLine, TimePoint,
Treatment))) +
# color = TimePoint)) +
ggplot2::geom_point() +
ggplot2::labs(color = "",
x = paste(pairList[i,1], "(Normalized Response)"),
y = paste(pairList[i,2], "(Normalized Response)"))
tar1 <- substr(pairList[i,1], 1, 9)
tar2 <- substr(pairList[i,2], 1, 9)
ggplot2::ggsave(plot, filename = paste0("Cytometry/", tar1, " vs ",
tar2, ".png"),
width = 8, height = 6)
}
}
cytometry <- function(data){
dir.create("Cytometry", showWarnings = FALSE)
rxDat <- filter(data, !grepl("Serum", Treatment))
pairList <- t(combn(unique(data$Target), 2))
for(i in seq_len(nrow(pairList))){
cytDat <- dplyr::filter(rxDat, Target %in% pairList[i, ])
cytCast <- reshape2::dcast(data = cytDat, Treatment + CellLine +
TimePoint + Replicate + n ~ Target,
value.var = "NormLog")
plot <- ggplot2::ggplot(cytCast, ggplot2::aes(x = cytCast[, 6],
y = cytCast[, 7],
color = interaction(CellLine, TimePoint,
Treatment))) +
# color = TimePoint)) +
ggplot2::geom_point() +
ggplot2::labs(color = "",
x = paste(pairList[i,1], "(Normalized Response)"),
y = paste(pairList[i,2], "(Normalized Response)"))
tar1 <- substr(pairList[i,1], 1, 9)
tar2 <- substr(pairList[i,2], 1, 9)
ggplot2::ggsave(plot, filename = paste0("Cytometry/", tar1, " vs ",
tar2, ".png"),
width = 8, height = 6)
}
}
cytometry(data = compDat)
getwd()
cytometry <- function(data){
dir.create("Cytometry", showWarnings = FALSE)
rxDat <- filter(data, !grepl("Serum", Treatment))
pairList <- t(combn(unique(data$Target), 2))
for(i in seq_len(nrow(pairList))){
cytDat <- dplyr::filter(rxDat, Target %in% pairList[i, ])
cytCast <- reshape2::dcast(data = cytDat, Treatment + CellLine +
TimePoint + Replicate + n ~ Target,
value.var = "NormLog")
plot <- ggplot2::ggplot(cytCast, ggplot2::aes(x = cytCast[, 6],
y = cytCast[, 7],
color = interaction(CellLine,
TimePoint))) +
ggplot2::geom_point() +
ggplot2::labs(color = "",
x = paste(pairList[i,1], "(Normalized Response)"),
y = paste(pairList[i,2], "(Normalized Response)"))
tar1 <- substr(pairList[i,1], 1, 9)
tar2 <- substr(pairList[i,2], 1, 9)
ggplot2::ggsave(plot, filename = paste0("Cytometry/", tar1, " vs ",
tar2, ".png"),
width = 8, height = 6)
}
}
library(biosensor)
library(biosensor)
getwd()
setwd("20160908_gaskXP-001a/\")
setwd("20160908_gaskXP-001a/")
analyzeBiosensorData()
traceback()
library(biosensor)
setwd("20160908_gaskXP-001a/")
getwd()
analyzeBiosensorData()
library(biosensor)
